spring.application.name=msadminstockkafka
server.port=8088

# -----------------------------
# Kafka Bootstrap Servers
# -----------------------------
spring.kafka.bootstrap-servers=localhost:29092,localhost:39092,localhost:49092

# -----------------------------
# Producer Configuration
# -----------------------------
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# -----------------------------
# Consumer Configuration
# -----------------------------
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Evita errores de deserialización por tipo
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.msadminstockkafka.dto.VentaDTO

# (Opcional) Grupo de consumidor, puede estar también en la clase @KafkaListener si se usa con groupId
spring.kafka.consumer.group-id=stock-group

# (Opcional) Reiniciar desde el principio del topic al probar localmente
spring.kafka.consumer.auto-offset-reset=earliest
